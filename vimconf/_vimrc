" jaypei vim config
"
"
" Plugins :
"   Pathogen - http://www.vim.org/scripts/script.php?script_id=2332
"   NERDTree - http://www.vim.org/scripts/script.php?script_id=1658
"   snipMate - http://www.vim.org/scripts/script.php?script_id=2540
"   Vimwiki - http://www.vim.org/scripts/script.php?script_id=2226
"   A - http://www.vim.org/scripts/script.php?script_id=31
"   tagbar - http://www.vim.org/scripts/script.php?script_id=3465
"   mark - http://www.vim.org/scripts/script.php?script_id=2666
"
" Syntax :
"   python - http://www.vim.org/scripts/script.php?script_id=790
"   qml - https://github.com/peterhoeg/vim-qml
"   jquery - http://www.vim.org/scripts/script.php?script_id=2416
"
" Indent :
"   web-indent - http://www.vim.org/scripts/script.php?script_id=3081
"   python - http://www.vim.org/scripts/script.php?script_id=3461
"

"""""""""""""""""""""""""""""""
" start pathogen 
"""""""""""""""""""""""""""""""
call pathogen#runtime_append_all_bundles() 


"""""""""""""""""""""""""""""""
" default
"""""""""""""""""""""""""""""""
source $VIMRUNTIME/vimrc_example.vim


"""""""""""""""""""""""""""""""
" VIM userinterface
"""""""""""""""""""""""""""""""
" Sets how many lines of history VIM has to remember
set history=700

" Enable filetype plugins
filetype on
filetype plugin on
filetype indent on
syntax on

" 自动补全命令时候使用菜单式匹配列表
set wildmenu
set wildignore=*.o,*~,*.pyc

set nocompatible
set nowrap
set nobackup
set noswapfile
set showcmd "显示命令
set foldmethod=marker

" 缩进
set shiftwidth=4
set tabstop=4
set expandtab
set softtabstop=4
set autoindent

" 断行
set lbr       "不在单词中间断行
set fo+=mB    "打开断行模块对亚洲语言支持

" color
if has("gui_running")
    color darkZ
else
    set t_Co=256
    color candycode
endif

"Set backspace
set backspace=eol,start,indent
 
" 编码
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1

set langmenu=zh_CN.UTF-8
set helplang=cn
if has("win32")
    set encoding=chinese
    set fileencoding=chinese
    language messages zh_CN.UTF-8
else
    set encoding=utf-8
    language messages C
endif


"Set 1 lines to the curors - when moving vertical..
set so=1
 
"Always show current position
set ruler
 
"Show line number
set number
 
"Do not redraw, when running macros.. lazyredraw
set lz
 
"Change buffer - without saving
set hid
 
"Bbackspace and cursor keys wrap to
set whichwrap+=<,>,h,l
 
"Ignore case when searching
set ignorecase smartcase
set incsearch
"Set magic on
set magic
set hlsearch
 
"No sound on errors.
set noerrorbells
set novisualbell
set t_vb=
 
"show matching bracets
set showmatch
 
"How many tenths of a second to blink
set mat=2
 
" Set to auto read when a file is changed from the outside
set autoread

" avoid the <hit enter to continue> prompt
"set shortmess+=T
set cmdheight=1
 

"""""""""""""""""""""""""""""""
" shortcuts
"""""""""""""""""""""""""""""""
" set default leader to ,
let mapleader = ","
let g:mapleader = ","

" fix insert mode Ctrl+X and BackSpace problem
map <C-X> <S-Del>i
map <BS> d

" vimrc autoload
if has("win32")
    map <C-F12> :e $VIM/_vimrc<CR>
elseif has("unix")
    map <C-F12> :e ~/.vimrc<CR>
endif

" Smart way to move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
map <C-Tab> :bn<CR>
map <S-Tab> :bp<CR>

" window resizing
map <F2> 0:vertical resize 70<CR>
map <C-F2> :vertical resize 30<CR>
map <C-w><C-d> <C-w>_

" move a line of text using ALT+[jk] or Comamnd+[jk] on mac
nmap <leader>j mz:m+<cr>`z
nmap <leader>k mz:m-2<cr>`z
vmap <leader>j :m'>+<cr>`<my`>mzgv`yo`z
vmap <leader>k :m'<-2<cr>`>my`<mzgv`yo`z

" others
set pastetoggle=<leader>pp
map <CR> :
map Q :q<CR>
map <space> /
map 0 ^
map <F4> :A<CR>
map <S-F8> :VimwikiIndex<CR>
map <F8> :VimwikiIndex<CR>
map <S-F11> :TagbarToggle <CR>
map <F11> :TagbarToggle <CR>
map <S-F12> :NERDTreeToggle %<CR>
map <F12> :NERDTreeToggle %<CR>

" python
autocmd FileType python     map <F9> :!python "%"<CR>
" perl
autocmd FileType perl       map <F9> :!perl -w "%"<CR>
" lua
autocmd FileType lua        map <F9> :!lua "%"<CR>
" shell
autocmd FileType sh         map <F9> :!bash "%"<CR>
" erlang
autocmd FileType erlang     map <F10> :!erlc "%"<CR>
if has("win32")
    autocmd FileType erlang map <F9> :!escript.exe "%"<CR>
else
    autocmd FileType erlang map <F9> :!"%"<CR>
endif
" vim
autocmd FileType vim        map <buffer> <leader><space> :w<CR>:source %<CR>
autocmd FileType vim        map <F9> :source %<CR>


"""""""""""""""""""""""""""""""
" status line
"""""""""""""""""""""""""""""""
"Always hide the statusline
set laststatus=2

" set powerline
let g:Powerline_cache_enabled = 0
let g:Powerline_symbols = 'fancy'
if has('win32')
    let g:Powerline_symbols = 'compatible'
endif


"""""""""""""""""""""""""""""""
" Plugin configuration
"""""""""""""""""""""""""""""""
"{{{ VimWiki

if has("win32")
    let g:vimwiki_dir = "D:/data/yunio/vimwiki"
elseif has("mac")
    let g:vimwiki_dir = "/Users/jaypei/work/vimwiki"
else
    let g:vimwiki_dir = "/home/jaypei/work/vimwiki"
endif
let s:vimwiki_path_base = g:vimwiki_dir
let g:vimwiki_list = [{'path': s:vimwiki_path_base . '/wiki', 
            \ 'path_thml': s:vimwiki_path_base . '/html',
            \ 'html_header': s:vimwiki_path_base . '/html_header.tpl'}]    
let g:vimwiki_table_auto_fmt = 0
let g:vimwiki_CJK_length = 1
let g:vimwiki_use_mouse = 0
let g:vimwiki_camel_case = 0
let g:vimwiki_ext2syntax = { '.md_wiki': 'markdown' }
autocmd FileType vimwiki map <leader>x i★<Esc>
autocmd FileType vimwiki set wrap

"}}}

"{{{ TagList

if has("unix")
    let Tlist_Ctags_Cmd="/usr/bin/ctags"
elseif has("win32 ")
    let Tlist_Ctags_Cmd="ctags.exe"
endif
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
let Tlist_Use_Right_Window=1
let Tlist_Auto_Open=0
let Tlist_Exit_OnlyWindow=1
"let Tlist_Auto_Highlight_Tag=0

function! LoadTag(name)
    if a:name == "LUA"
        set tags=E:\Libs\C++\lua-5.1.4\tags
        let g:LookupFile_TagExpr = '"E:/Libs/C++/lua-5.1.4/tags"'
    elseif a:name == "QT"
        set tags=E:\Libs\C++\QtTEMP\src\tags
        let g:LookupFile_TagExpr = '"E:/Libs/C++/QtTEMP/src/tags"'
    endif
endfunction

"}}}

"{{{ python

let python_version_2 = 1
let python_highlight_all = 1
let python_print_as_function = 0

"让Vim的补全菜单行为与一般IDE一致(参考VimTip1228)
set completeopt+=longest

"}}}

"{{{ thrift filetype

autocmd BufRead,BufNewFile *.thrift set filetype=thrift

"}}}

"{{{ javascript syntax

autocmd BufRead,BufNewFile jquery.*.js set ft=javascript syntax=jquery

"}}}

